package Hashing;

import java.util.Arrays;
import java.util.HashMap;

public class _560_SubarraySumEqualsK {
	
	/*private static int subarraySum(int[] nums, int k) {
		int result=0;
		if(nums==null || nums.length==0)return result;
		int sum=0;
		HashMap<Integer,Integer> map = new HashMap<>();
		map.put(0, 1);
		for(int i=0;i<nums.length;i++) {
			int num = nums[i];
			sum += num;
			if(map.containsKey(sum-k)) {
				result += map.get(sum-k);
			}
			if(!map.containsKey(sum)) {
				map.put(sum, 0);
			}
			map.put(sum, map.get(sum)+1);
		}
		return result;
	}*/
	private static int subarraySum(int[] nums, int k) {
		int result=0;
		if(nums==null || nums.length==0)return result;
		for(int i=0;i<nums.length;i++) {
			for(int j=i;j<nums.length;j++) {
				int[] temp = Arrays.copyOfRange(nums, i, j+1);
				int sum=0;
				for(int a=0;a<temp.length;a++) {
					sum += temp[a];
				}
				if(sum == k) {
					result++;
				}
			}
		}
		return result;
	}

	public static void main(String[] args) {
		int[] nums = {1,-1,0,0};
		int k=0;
		int result = subarraySum(nums,k);
		System.out.println(result);
	}
}
